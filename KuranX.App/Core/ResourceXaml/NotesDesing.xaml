<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:Icon="http://metro.mahapps.com/winfx/xaml/iconpacks"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style TargetType="TextBlock" x:Key="InfoStatusText">
        <Setter Property="Foreground" Value="#1C1E2F" />
        <Setter Property="FontSize" Value="11" />
        <Setter Property="FontFamily" Value="{DynamicResource PoppinsSemiBold}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Margin" Value="6 0 0 0" />
    </Style>

    <Style x:Key="nt_pageColorControl" TargetType="Button">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <StackPanel Orientation="Horizontal">
                        <Border Width="24" Height="24" Background="{Binding Path=Tag, RelativeSource={RelativeSource TemplatedParent}}" CornerRadius="5" />
                        <TextBlock x:Name="text" Text="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource InfoStatusText}" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand" />
                            <Setter Property="Foreground" Value="#F0433A" TargetName="text" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="#383C41" TargetName="text" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="nt_viewStackBtn">
        <Setter Property="Width" Value="36" />
        <Setter Property="Height" Value="36" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border Background="{Binding Path=Tag, RelativeSource={RelativeSource TemplatedParent}}" CornerRadius="5">
                        <TextBlock Text="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="{Binding Path=Uid, RelativeSource={RelativeSource TemplatedParent}}" FontFamily="{DynamicResource PoppinsSemiBold}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="nt_ItemOpenIcon" TargetType="Button">

        <Setter Property="Width" Value="24" />
        <Setter Property="Height" Value="24" />
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="0" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <TextBlock Width="20" Height="20">
                        <Icon:PackIconCodicons  x:Name="txt_trg" Kind="{Binding Path=Tag, RelativeSource={RelativeSource TemplatedParent}}" Width="20" Height="20" Foreground="#1C1E2F" VerticalAlignment="Center"  HorizontalAlignment="Center" />
                    </TextBlock>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="txt_trg" Property="Foreground" Value="#F0433A" />
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="nt_StackHeader" TargetType="TextBlock">

        <Setter Property="Width" Value="150" />
        <Setter Property="TextWrapping" Value="NoWrap" />
        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
        <Setter Property="Foreground" Value="#1C1E2F" />
        <Setter Property="FontFamily" Value="{DynamicResource PoppinsMedium}" />
        <Setter Property="FontSize" Value="14" />
    </Style>

    <Style x:Key="nt_ItemHeader" TargetType="TextBlock">

        <Setter Property="TextWrapping" Value="NoWrap" />
        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
        <Setter Property="Foreground" Value="#1C1E2F" />
        <Setter Property="FontFamily" Value="{DynamicResource PoppinsMedium}" />
        <Setter Property="FontSize" Value="13" />
    </Style>

    <Style x:Key="nt_ItemDate" TargetType="TextBlock">

        <Setter Property="Width" Value="150" />
        <Setter Property="Foreground" Value="#7B7B7B" />
        <Setter Property="FontFamily" Value="{DynamicResource PoppinsMedium}" />
        <Setter Property="FontSize" Value="11" />
    </Style>

    <Style  x:Key="nt_DetailTxtBox" TargetType="TextBox">
        <Setter Property="Background" Value="#fff" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="#1C1E2F" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="{DynamicResource PoppinsMedium}" />
        <Setter Property="Padding" Value="10" />

        <Style.Triggers>
            <Trigger Property="Visibility" Value="Visible">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                             From="0.0" To="1.0" Duration="0:0:0.5" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>