<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:Icon="http://metro.mahapps.com/winfx/xaml/iconpacks"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="popupTemp" TargetType="Popup">

        <Setter Property="Grid.Row" Value="5" />
        <Setter Property="Panel.ZIndex" Value="10" />
        <Setter Property="Width" Value="280" />
        <Setter Property="Height" Value="60" />
        <Setter Property="PlacementTarget" Value="{Binding ElementName=vb7}" />
        <Setter Property="VerticalOffset" Value="10" />
        <Setter Property="HorizontalOffset" Value="-50" />
        <Setter Property="AllowsTransparency" Value="True" />
    </Style>

    <!-- Border -->
    <Style x:Key="headerBorderTemp" TargetType="Border">
        <Setter Property="Height" Value="50" />
        <Setter Property="CornerRadius" Value="5 5 0 0" />
        <Setter Property="Width" Value="Auto" />
        <Setter  Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <LinearGradientBrush.RelativeTransform>
                        <TransformGroup>
                            <ScaleTransform CenterY="0.5" CenterX="0.5" />
                            <SkewTransform CenterX="0.5" CenterY="0.5" />
                            <RotateTransform Angle="-90" CenterX="0.5" CenterY="0.5" />
                            <TranslateTransform />
                        </TransformGroup>
                    </LinearGradientBrush.RelativeTransform>
                    <GradientStop Color="#FF540032" Offset="0" />
                    <GradientStop Color="#FFC9283E" Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Border -->

    <!-- Textblock -->

    <Style x:Key="popupHeaderText" TargetType="TextBlock">

        <Setter Property="Foreground" Value="#FFFFFF" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontFamily" Value="{DynamicResource PoppinsMedium}" />
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
    </Style>

    <!-- Textblock -->

    <!-- Textbox-->

    <!--
    <Style x:Key="popupDefaulTextBox" TargetType="TextBox">
        <Setter Property="MinWidth" Value="150" />
        <Setter Property="Width" Value="200" />
        <Setter Property="MinHeight" Value="25" />
        <Setter Property="Padding" Value="15 0 15 0" />
        <Setter Property="FontSize" Value="10" />
        <Setter Property="FontFamily" Value="{DynamicResource ResourceKey=PoppinsMedium}" />
        <Setter Property="Foreground" Value="#1C1E2F" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border CornerRadius="5" BorderThickness="1" BorderBrush="Red">
                        <TextBox />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    -->

    <Style TargetType="TextBox" x:Key="popupDefaulTextBox">

        <Setter Property="MinWidth" Value="150" />
        <Setter Property="Width" Value="180" />
        <Setter Property="MinHeight" Value="35" />
        <Setter Property="Foreground" Value="#1C1E2F" />
        <Setter Property="FontSize" Value="10" />
        <Setter Property="FontFamily" Value="{DynamicResource PoppinsSemiBold}" />
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="BorderBrush" Value="#ADB5BD" />
        <Setter Property="Margin" Value="0 5 0 0" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="10 0 10 0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border  x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="#80F0433A" />
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter Property="Background" Value="#f3f2f7" TargetName="PART_ContentHost" />
                            <Setter Property="BorderThickness" Value="0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TextBox" x:Key="popupDefaulTextArea">

        <Setter Property="MinWidth" Value="150" />
        <Setter Property="Width" Value="180" />
        <Setter Property="MinHeight" Value="25" />
        <Setter Property="Foreground" Value="#7B7B7B" />
        <Setter Property="FontSize" Value="10" />
        <Setter Property="FontFamily" Value="{DynamicResource PoppinsMedium}" />
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="BorderBrush" Value="#ACACAC" />
        <Setter Property="Margin" Value="0 5 0 0" />
        <Setter Property="Padding" Value="10 10 10 10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="#80F0433A" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="popupDefaultTextBoxTextblock" TargetType="TextBlock">

        <Setter Property="FontFamily" Value="{DynamicResource PoppinsSemiBold}" />
        <Setter Property="Foreground" Value="#1C1E2F" />
        <Setter Property="FontSize" Value="10" />
    </Style>

    <!-- Textbox-->

    <!-- Label -->

    <Style x:Key="popupDefaultTextBoxLabel" TargetType="Label">
        <Setter Property="FontFamily" Value="{DynamicResource PoppinsSemiBold}" />
        <Setter Property="Foreground" Value="#1C1E2F" />
        <Setter Property="FontSize" Value="10" />
    </Style>

    <!-- Label -->

    <!-- CheckBox -->

    <Style x:Key="feedbackStar" TargetType="CheckBox">

        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Margin" Value="0 0 10 0" />
        <Setter Property="Foreground" Value="#1C1E2F" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Icon:PackIconEvaIcons x:Name="starTarget" Kind="{Binding Path=Tag, RelativeSource={RelativeSource TemplatedParent}}" Width="24" Height="24" Foreground="{TemplateBinding Foreground}" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Tag" Value="Star" TargetName="starTarget" />
                            <Setter Property="Cursor" Value="Hand" />
                            <Setter Property="Foreground" Value="#FD7E14" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Foreground" Value="#FD7E14" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="subjectHeaderColorSelected" TargetType="CheckBox">

        <Setter Property="Width" Value="36" />
        <Setter Property="Height" Value="36" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="7 0 7 0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border Background="{Binding Path=Tag, RelativeSource={RelativeSource TemplatedParent}}" CornerRadius="5" BorderThickness="2" BorderBrush="{Binding BorderBrush}">
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="BorderBrush" Value="#FFACACAC" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- CheckBox -->

    <!-- Button -->

    <Style x:Key="popupDefaultButtonBase" TargetType="Button">
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="#1C1E2F" />
        <Setter Property="Width" Value="100" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Margin" Value="10 0 10 0" />
    </Style>

    <Style x:Key="popupDefaultButtonBstrp" TargetType="Button" BasedOn="{StaticResource popupDefaultButtonBase}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border x:Name="borderTarget" CornerRadius="5" BorderBrush="#E1E3E6" BorderThickness="1">
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
                            <Icon:PackIconBootstrapIcons Kind="{Binding Path=Tag, RelativeSource={RelativeSource TemplatedParent}}" Foreground="{TemplateBinding Foreground}" Width="18" Height="18" VerticalAlignment="Center" HorizontalAlignment="Center" />
                            <TextBlock Margin="5 0 0 0" Text="{Binding Path=Content,RelativeSource={RelativeSource TemplatedParent}}" Foreground="{TemplateBinding Foreground}" FontSize="12" FontFamily="{DynamicResource PoppinsMedium}" TextAlignment="Center" VerticalAlignment="Center" />
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="borderTarget" Property="Background" Value="#F0433A" />
                            <Setter Property="Foreground" Value="#FFFFFF" />
                            <Setter TargetName="borderTarget" Property="BorderThickness" Value="0" />
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="popupDefaultButtonSend" TargetType="Button" BasedOn="{StaticResource popupDefaultButtonBase}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border x:Name="borderTarget" CornerRadius="5" BorderBrush="#E1E3E6" BorderThickness="1">
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
                            <Icon:PackIconIonicons Kind="{Binding Path=Tag, RelativeSource={RelativeSource TemplatedParent}}" Foreground="{TemplateBinding Foreground}" Width="18" Height="18" VerticalAlignment="Center" HorizontalAlignment="Center" />
                            <TextBlock Margin="5 0 0 0" Text="{Binding Path=Content,RelativeSource={RelativeSource TemplatedParent}}" Foreground="{TemplateBinding Foreground}" FontSize="12" FontFamily="{DynamicResource PoppinsMedium}" TextAlignment="Center" VerticalAlignment="Center" />
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="borderTarget" Property="Background" Value="#F0433A" />
                            <Setter Property="Foreground" Value="#FFFFFF" />
                            <Setter TargetName="borderTarget" Property="BorderThickness" Value="0" />
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="popupDefaultButtonRest" TargetType="Button" BasedOn="{StaticResource popupDefaultButtonBase}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border x:Name="borderTarget" CornerRadius="5" BorderBrush="#E1E3E6" BorderThickness="1">
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
                            <Icon:PackIconRadixIcons Kind="{Binding Path=Tag, RelativeSource={RelativeSource TemplatedParent}}" Foreground="{TemplateBinding Foreground}" Width="18" Height="18" VerticalAlignment="Center" HorizontalAlignment="Center" />
                            <TextBlock Margin="5 0 0 0" Text="{Binding Path=Content,RelativeSource={RelativeSource TemplatedParent}}" Foreground="{TemplateBinding Foreground}" FontSize="12" FontFamily="{DynamicResource PoppinsMedium}" TextAlignment="Center" VerticalAlignment="Center" />
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="borderTarget" Property="Background" Value="#F0433A" />
                            <Setter Property="Foreground" Value="#FFFFFF" />
                            <Setter TargetName="borderTarget" Property="BorderThickness" Value="0" />
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="popupDefaultButtonClosed" TargetType="Button" BasedOn="{StaticResource popupDefaultButtonBase}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border x:Name="borderTarget" CornerRadius="5" BorderBrush="#E1E3E6" BorderThickness="1">
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
                            <Icon:PackIconVaadinIcons Kind="{Binding Path=Tag, RelativeSource={RelativeSource TemplatedParent}}" Foreground="{TemplateBinding Foreground}" Width="12" Height="12" VerticalAlignment="Center" HorizontalAlignment="Center" />
                            <TextBlock Margin="5 0 0 0" Text="{Binding Path=Content,RelativeSource={RelativeSource TemplatedParent}}" Foreground="{TemplateBinding Foreground}" FontSize="12" FontFamily="{DynamicResource PoppinsMedium}" TextAlignment="Center" VerticalAlignment="Center" />
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="borderTarget" Property="Background" Value="#F0433A" />
                            <Setter Property="Foreground" Value="#FFFFFF" />
                            <Setter TargetName="borderTarget" Property="BorderThickness" Value="0" />
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="selectConnectAyet" TargetType="Button">

        <Setter Property="Background" Value="#fff" />
        <Setter Property="Foreground" Value="#1C1E2F" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Height" Value="56" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border Margin="10" Style="{DynamicResource defaultBorderShadowEffect}" Background="{TemplateBinding Background}" Width="220">
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
                            <TextBlock MaxWidth="180" TextWrapping="Wrap" TextTrimming="CharacterEllipsis" Text="{Binding Path=Content,RelativeSource={RelativeSource TemplatedParent}}"  FontSize="14" FontFamily="{DynamicResource PoppinsRegular}" Foreground="{TemplateBinding Foreground}" />
                            <Icon:PackIconEvaIcons Kind="{Binding Path=Tag,RelativeSource={RelativeSource TemplatedParent}}" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" HorizontalAlignment="Right" Width="14" Height="14" Margin="10 0 0 0" />
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">

                <Setter Property="Background" Value="#F0433A" />
                <Setter Property="Foreground" Value="#FFF" />
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Button -->

    <!-- DynamicStyle -->

    <Style x:Key="popupDefaultTextBoxTextBlock" TargetType="TextBlock">

        <Setter Property="FontFamily" Value="{DynamicResource PoppinsSemiBold}" />
        <Setter Property="Foreground" Value="#1C1E2F" />
        <Setter Property="FontSize" Value="10" />
        <Setter Property="TextAlignment" Value="Center" />
    </Style>

    <Style x:Key="dynamicItemStackpanel" TargetType="StackPanel">

        <Setter Property="Orientation" Value="Vertical" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
    </Style>

    <Style x:Key="dynamicItemTextHeader" TargetType="TextBlock">

        <Setter Property="Foreground" Value="#1C1E2F" />
        <Setter Property="FontFamily" Value="{DynamicResource PoppinsMedium}" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Margin" Value="0 5 0 5" />
    </Style>

    <Style x:Key="dynamicItemTextNote" TargetType="TextBlock">

        <Setter Property="Foreground" Value="#383C41" />
        <Setter Property="FontFamily" Value="{DynamicResource PoppinsRegular}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="MaxHeight" Value="63" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
        <Setter Property="Margin" Value="0 10 0 10" />
    </Style>

    <Style x:Key="dynamicItemShowButton" TargetType="Button">

        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Margin" Value="0 5 0 5" />
        <Setter Property="Foreground" Value="#1C1E2F" />
        <Setter Property="FontFamily" Value="{DynamicResource PoppinsMedium}" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <TextBlock Text="Tamamını Göster" TextAlignment="Left" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#F0433A" />
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="pdfItemShowButton" TargetType="Button" BasedOn="{StaticResource dynamicItemShowButton}">

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <TextBlock Text="Sureye Git" TextAlignment="Left" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="dynamicItemShowSperator" TargetType="Separator">

        <Setter Property="Width" Value="435" />
        <Setter Property="Background" Value="#FFACACAC" />
        <Setter Property="Margin" Value="0 5 0 5" />
    </Style>

    <Style x:Key="wordHeader" TargetType="TextBlock">

        <Setter Property="Width" Value="200" />
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="{DynamicResource PoppinsSemiBold}" />
        <Setter Property="Foreground" Value="#1C1E2F" />
        <Setter Property="FontSize" Value="16" />
    </Style>

    <Style x:Key="wordDetail" TargetType="TextBlock">

        <Setter Property="Width" Value="220" />
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="{DynamicResource PoppinsMedium}" />
        <Setter Property="Foreground" Value="#383C41" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="Margin" Value="5 0 5 0" />
    </Style>

    <Style x:Key="wordStack" TargetType="StackPanel">

        <Setter Property="Orientation" Value="Horizontal" />
        <Setter Property="Margin" Value="0 10 0 10" />
    </Style>

    <!-- DynamicStyle -->

    <!-- Combobox -->
    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border
              x:Name="Border"
              Grid.ColumnSpan="2"
              CornerRadius="5"
              Background="#ffffff"
              BorderBrush="#ADB5BD"
              BorderThickness="1">
            </Border>
            <Border
              Grid.Column="0"
              CornerRadius="5,0,0,5"
              Margin="1"
              Background="#ffffff"
              BorderBrush="#ADB5BD"
              BorderThickness="0" />
            <Path
              x:Name="Arrow"
              Grid.Column="1"
              Fill="#1C1E2F"
              HorizontalAlignment="Center"
              VerticalAlignment="Center"
              Data="M 0 0 L 4 4 L 8 0 Z" />
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
    </ControlTemplate>

    <Style TargetType="ComboBox" x:Key="popupCombobox">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="MinWidth" Value="180" />
        <Setter Property="Width" Value="180" />
        <Setter Property="MinHeight" Value="35" />
        <Setter Property="Padding" Value="15 0 15 0" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Margin" Value="0 5 0 0" />
        <Setter Property="FontFamily" Value="{DynamicResource PoppinsMedium}" />
        <Setter Property="Foreground" Value="#1C1E2F" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton
                            Name="ToggleButton"
                            Template="{StaticResource ComboBoxToggleButton}"
                            Grid.Column="2"
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                        </ToggleButton>
                        <ContentPresenter
                            Name="ContentSite"
                            IsHitTestVisible="False"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="10 0 0 0"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left" />
                        <TextBox x:Name="PART_EditableTextBox"
                            Style="{x:Null}"
                            Template="{StaticResource ComboBoxTextBox}"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Margin="0"
                            Focusable="True"
                            Background="Transparent"
                            Visibility="Hidden"
                            IsReadOnly="{TemplateBinding IsReadOnly}" />
                        <Popup
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True"
                            Focusable="False"
                            PopupAnimation="Slide">
                            <Grid
                              Name="DropDown"
                              SnapsToDevicePixels="True"
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border
                                    x:Name="DropDownBorder"
                                    Background="#FFFFFF"
                                    BorderThickness="1"
                                    BorderBrush="#ADB5BD" />
                                <ScrollViewer Margin="0" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="150" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0" />
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0" />
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false" />
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility"    Value="Visible" />
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ComboBoxItem" x:Key="ayetlerNavComboboxItems">
        <Setter Property="FontFamily" Value="{DynamicResource PoppinsMedium}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="10" />
    </Style>
    <!-- Combobox -->
</ResourceDictionary>