<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:Icon="http://metro.mahapps.com/winfx/xaml/iconpacks"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="resultHeader" TargetType="Button">

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
                        <Image x:Name="menuIconItemCtrlTmp" Source="{Binding Path=Tag , RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ResourceKey=hmwnd_menuIcon}" />
                        <TextBlock Text="Sonuc" Margin="10 0 0 0" TextAlignment="Center" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="#1C1E2F" FontSize="22" FontFamily="{DynamicResource PoppinsSemiBold}" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TextBlock" x:Key="resultFrameComboboxHeaderText">

        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Margin" Value="0 3 10 0" />
        <Setter Property="FontFamily" Value="{DynamicResource PoppinsMedium}" />
    </Style>

    <Style TargetType="Button" x:Key="resultMainItems">

        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
    </Style>

    <Style x:Key="resultItemsIcon" TargetType="{x:Type Image}">

        <Setter Property="RenderOptions.BitmapScalingMode" Value="HighQuality" />
        <Setter Property="Width" Value="20" />
        <Setter Property="Margin" Value="10 0 10 0" />
        <Setter Property="Height" Value="20" />
    </Style>

    <Style x:Key="resultItemsIconAyet" TargetType="{x:Type Image}" BasedOn="{StaticResource resultItemsIcon}">

        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.60" />
                <Setter Property="Source" Value="/resource/images/icon/verse_r.png" />
            </Trigger>

            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="Opacity" Value="1" />
                <Setter Property="Source" Value="/resource/images/icon/verse_rbr.png" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="resultItemsIconSubject" TargetType="{x:Type Image}" BasedOn="{StaticResource resultItemsIcon}">

        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.60" />
                <Setter Property="Source" Value="/resource/images/icon/subject_r.png" />
            </Trigger>

            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="Opacity" Value="1" />
                <Setter Property="Source" Value="/resource/images/icon/subject_rbr.png" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="resultItemsIconLib" TargetType="{x:Type Image}" BasedOn="{StaticResource resultItemsIcon}">

        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.60" />
                <Setter Property="Source" Value="/resource/images/icon/library_r.png" />
            </Trigger>

            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="Opacity" Value="1" />
                <Setter Property="Source" Value="/resource/images/icon/library_rbr.png" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="resultItemsIconNotes" TargetType="{x:Type Image}" BasedOn="{StaticResource resultItemsIcon}">

        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.60" />
                <Setter Property="Source" Value="/resource/images/icon/notes_r.png" />
            </Trigger>

            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="Opacity" Value="1" />
                <Setter Property="Source" Value="/resource/images/icon/notes_rbr.png" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="resultItemsHeaderName" TargetType="TextBlock">

        <Setter Property="Foreground" Value="#1C1E2F" />
        <Setter Property="FontSize" Value="24" />
        <Setter Property="FontFamily" Value="{DynamicResource PoppinsMedium}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Width" Value="200" />
        <Setter Property="Padding" Value="10 0 10 0" />
    </Style>

    <Style x:Key="resultItemsControlBtn" TargetType="Button">

        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Width" Value="24" />
        <Setter Property="Height" Value="24" />
        <Setter Property="Margin" Value="4 0 4 0" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <TextBlock Width="24" Height="24">
                        <Icon:PackIconBootstrapIcons Kind="BoxArrowInRight" x:Name="icon" Width="24" Height="24" Foreground="#FF1C1E2F" />
                    </TextBlock>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"  Value="True">
                            <Setter Property="Foreground" TargetName="icon" Value="#C9283E" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="resultItemsControlButon" TargetType="CheckBox">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="Height" Value="21" />
        <Setter Property="Width" Value="21" />
        <Setter Property="Margin" Value="15 0 15 0 " />
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <TextBlock Width="21" Height="21">
                        <Image x:Name="icoImage" Source="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" Width="21" Height="21" RenderOptions.BitmapScalingMode="HighQuality" />
                    </TextBlock>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Source" Value="{Binding Path=Uid, RelativeSource={RelativeSource TemplatedParent}}" TargetName="icoImage" />
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Source" Value="{Binding Path=Tag, RelativeSource={RelativeSource TemplatedParent}}" TargetName="icoImage" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="resultItemsStatusButon" TargetType="Button">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="Height" Value="18" />
        <Setter Property="Width" Value="18" />
        <Setter Property="Margin" Value="15 3 15 3 " />
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <TextBlock Width="18" Height="18">
                        <Image x:Name="icoImage" Source="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" Width="18" Height="18" RenderOptions.BitmapScalingMode="HighQuality" />
                    </TextBlock>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter Property="Source" Value="{Binding Path=Tag, RelativeSource={RelativeSource TemplatedParent}}" TargetName="icoImage" />
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Arrow" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--
    <Style x:Key="resultItemsControl" TargetType="Button" BasedOn="{StaticResource resultItemsControlButon}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border x:Name="border" Background="{TemplateBinding Background}" VerticalAlignment="Center"  BorderThickness="0" CornerRadius="5" Padding="20 5 20 5" Style="{DynamicResource defaultBorderShadowEffect}">
                        <StackPanel Orientation="Horizontal" UseLayoutRounding="True" SnapsToDevicePixels="True" VerticalAlignment="Center" HorizontalAlignment="Center">
                            <TextBlock  RenderOptions.BitmapScalingMode="HighQuality" x:Name="text" Text="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" FontSize="13" FontFamily="{DynamicResource PoppinsMedium}" Margin="5 0 0 0" Foreground="#1C1E2F" />
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#C9283E" TargetName="border" />
                            <Setter Property="Foreground" Value="#FFFFFF" TargetName="text" />
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Background" Value="#FFE4E6EF" />
                            <Setter Property="Cursor" Value="No" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    -->

    <Style x:Key="resWinNoteDetailHeader" TargetType="TextBlock">

        <Setter Property="FontFamily" Value="{DynamicResource PoppinsMedium}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Foreground" Value="#1C1E2F" />
    </Style>

    <Style x:Key="resWinNoteDetailSubHeader" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{DynamicResource PoppinsMedium}" />
        <Setter Property="FontSize" Value="11" />
        <Setter Property="Foreground" Value="#C9283E" />
    </Style>

    <Style x:Key="resWinNoteDetailNoteDetail" TargetType="TextBlock">
    </Style>
</ResourceDictionary>